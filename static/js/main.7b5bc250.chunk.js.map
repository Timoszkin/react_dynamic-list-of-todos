{"version":3,"sources":["components/TodoList/TodoList.tsx","components/CurrentUser/CurrentUser.tsx","App.tsx","index.tsx"],"names":["TodoList","state","fetchedTodos","todos","failedtoLoad","loadingTodos","shuffleArray","setState","prev","sort","Math","random","request","a","fetch","todosResponse","json","todosArray","this","error","selectUser","props","className","hidden","type","placeholder","onChange","event","target","value","length","filter","el","title","toLowerCase","includes","toLocaleLowerCase","onClick","name","id","completed","map","todo","cn","readOnly","userId","React","Component","CurrentUser","activeUser","email","phone","clear","user","userID","prevProps","App","selectedUserId","selectNewUser","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7b5bc250.chunk.js","sourcesContent":["import React from 'react';\nimport './TodoList.scss';\nimport cn from 'classnames';\nimport { TodoType } from './TodoType';\n\ninterface State {\n  fetchedTodos: TodoType[];\n  todos: TodoType[];\n  failedtoLoad: boolean;\n  loadingTodos: boolean;\n}\n\ninterface Props {\n  selectUser: (userId: number) => void;\n}\n\nexport class TodoList extends React.Component<Props, State> {\n  state: State = {\n    fetchedTodos: [],\n    todos: [],\n    failedtoLoad: false,\n    loadingTodos: true,\n  };\n\n  componentDidMount() {\n    try {\n      this.request();\n    } catch (error) {\n      this.setState({ failedtoLoad: true });\n    }\n  }\n\n  shuffleArray = () => {\n    this.setState((prev) => {\n      const newArr = prev.todos.sort(() => 0.5 - Math.random());\n\n      return { todos: newArr };\n    });\n  };\n\n  request = async () => {\n    const todosResponse = await fetch('https://mate.academy/students-api/todos');\n\n    const todosArray: TodoType[] = await todosResponse.json();\n\n    this.setState({ todos: todosArray, fetchedTodos: todosArray, loadingTodos: false });\n  };\n\n  render() {\n    const {\n      todos,\n      fetchedTodos,\n      loadingTodos,\n      failedtoLoad,\n    } = this.state;\n    const { selectUser } = this.props;\n\n    return (\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n        <h3\n          hidden={!loadingTodos}\n        >\n          Loading todos...\n        </h3>\n        <h3\n          hidden={!failedtoLoad}\n        >\n          Failed to load todos\n        </h3>\n        <input\n          type=\"text\"\n          placeholder=\"Search...\"\n          onChange={(event) => {\n            if (event.target.value.length === 0) {\n              this.setState({ todos: fetchedTodos });\n            } else {\n              this.setState((prev) => {\n                return {\n                  todos: prev.todos.filter(el => el.title.toLowerCase()\n                    .includes(event.target.value.toLocaleLowerCase())),\n                };\n              });\n            }\n          }}\n        />\n        <button\n          type=\"button\"\n          onClick={() => this.shuffleArray()}\n        >\n          Randomize\n        </button>\n        <select name=\"sorting__selection\" id=\"sorting__selection\">\n          <option\n            value=\"completed\"\n            onClick={() => this.setState({ todos: [...fetchedTodos] })}\n          >\n            All\n          </option>\n          <option\n            value=\"completed\"\n            onClick={() => this.setState({\n              todos: fetchedTodos.filter(el => el.completed === true),\n            })}\n          >\n            Completed\n          </option>\n          <option\n            value=\"completed\"\n            onClick={() => this.setState({\n              todos: fetchedTodos.filter(el => el.completed === false),\n            })}\n          >\n            Active\n          </option>\n        </select>\n        <div className=\"TodoList__list-container\">\n          <ul className=\"TodoList__list\">\n            {todos && todos.map(todo => {\n              return (\n                <li\n                  key={todo.id}\n                  className={\n                    cn('TodoList__item', {\n                      'TodoList__item--checked': todo.completed,\n                      'TodoList__item--unchecked': !todo.completed,\n                    })\n                  }\n                >\n                  <label>\n                    <input type=\"checkbox\" readOnly />\n                    <p>{todo.title}</p>\n                  </label>\n\n                  <button\n                    onClick={() => {\n                      selectUser(todo.userId);\n                    }}\n                    className={\n                      cn('TodoList__user-button', {\n                        'TodoList__user-button--selected': todo.completed,\n                        '': !todo.completed,\n                      })\n                    }\n                    type=\"button\"\n                  >\n                    User&nbsp;\n                    {todo.userId}\n                  </button>\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './CurrentUser.scss';\nimport { User } from './UserType';\n\ninterface Props {\n  userID: number;\n}\n\ninterface State {\n  activeUser: User;\n}\n\nexport class CurrentUser extends React.Component<Props> {\n  state: State = {\n    activeUser: {\n      id: 0,\n      name: 'no user selected',\n      email: '',\n      phone: '',\n    },\n  };\n\n  componentDidMount() {\n    this.request(this.props.userID);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (this.props.userID !== prevProps.userID) {\n      this.request(this.props.userID);\n    }\n  }\n\n  clear = () => {\n    this.setState({\n      activeUser: {\n        id: 0,\n        name: 'no user selected',\n        email: '',\n        phone: '',\n      },\n    });\n  };\n\n  request = async (id: number) => {\n    const todosResponse = await fetch(`https://mate.academy/students-api/users/${id}`);\n\n    const user: User = await todosResponse.json();\n\n    this.setState({ activeUser: user });\n  };\n\n  render() {\n    const { activeUser: user } = this.state;\n\n    return (\n      <>\n        <div className=\"CurrentUser\">\n          <h2 className=\"CurrentUser__title\">\n            <span>\n              Selected user:\n              {user.id}\n            </span>\n          </h2>\n          <h3 className=\"CurrentUser__name\">{user.name}</h3>\n          <p className=\"CurrentUser__email\">{user.email}</p>\n          <p className=\"CurrentUser__phone\">{user.phone}</p>\n        </div>\n        <button\n          type=\"button\"\n          onClick={() => this.clear()}\n        >\n          Clear\n        </button>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\n\ninterface State {\n  selectedUserId: number;\n}\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    selectedUserId: 0,\n  };\n\n  selectNewUser = (userId: number) => {\n    this.setState({ selectedUserId: userId });\n  };\n\n  render() {\n    const { selectedUserId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList selectUser={this.selectNewUser} />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser userID={selectedUserId} />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}